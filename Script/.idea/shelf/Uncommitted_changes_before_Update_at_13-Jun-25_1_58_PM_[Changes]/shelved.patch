Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\r\nimport os\r\nimport sqlite3\r\nimport google.generativeai as genai\r\nimport re\r\nimport json\r\n\r\ngenai.configure(api_key=\"AIzaSyCQQKLp1V2GEgnHEab1fKKL6K6O5lcBXZY\")\r\nscript_dir = os.path.dirname(os.path.abspath(__file__))\r\n\r\nDb_path = os.path.join(script_dir, \"..\", \"DB\", \"SmartQuizGen.db\")\r\n\r\ndef GetPdf(id):\r\n    try:\r\n        conn = sqlite3.connect(Db_path)\r\n        cursor = conn.cursor()\r\n        cursor.execute(\"SELECT filename, data, user_id FROM pdfs WHERE id = ?\", (id,))\r\n        row = cursor.fetchone()\r\n        conn.close()\r\n\r\n        if row is None:\r\n            return  # No return if the PDF isn't found\r\n\r\n        filename, pdf_data, user_id = row\r\n        temp_path = f\"/tmp/{filename}\"\r\n\r\n        with open(temp_path, \"wb\") as file:\r\n            file.write(pdf_data)\r\n\r\n        return {\"user_id\": user_id, \"pdf_id\": id, \"path\": temp_path}\r\n\r\n    except sqlite3.Error as e:\r\n        return  # No return on error\r\n\r\ndef generate(file_path, user_id, pdf_id):\r\n    try:\r\n        uploaded_file = genai.upload_file(path=file_path)\r\n        model = genai.GenerativeModel(\"gemini-1.5-pro\")\r\n\r\n        prompt = \"\"\"\r\n        I will upload a PDF. Your task is to generate 5 multiple-choice quiz questions from it.\r\n        Format the output as JSON with this structure with no extra thing even a comma is not allow to be add:\r\n        {\r\n          \"quiz\": [\r\n            {\r\n              \"question\": \"Sample question?\",\r\n              \"options\": [\"A\", \"B\", \"C\", \"D\"],\r\n              \"correct_answer\": \"B\"\r\n            }\r\n          ],\r\n          \"error\": null\r\n        }\r\n        \"\"\"\r\n\r\n        response = model.generate_content(\r\n            contents=[{\"file_data\": {\"file_uri\": uploaded_file.uri}}, {\"text\": prompt}],\r\n            generation_config={\"temperature\": 0.7, \"max_output_tokens\": 1024}\r\n        )\r\n\r\n        match = re.search(r'(\\{.*\\})', response.text, re.DOTALL)\r\n        if match:\r\n            quiz_json = match.group(1)\r\n        else:\r\n            quiz_json = '{\"quiz\": [], \"error\": \"Error in generating quiz.\"}'\r\n\r\n        save_quiz_to_db(user_id, pdf_id, quiz_json)\r\n\r\n    except Exception as e:\r\n        pass  # Error is ignored silently\r\n\r\ndef save_quiz_to_db(user_id, pdf_id, quiz_data):\r\n    try:\r\n        conn = sqlite3.connect(Db_path)\r\n        cursor = conn.cursor()\r\n\r\n        cursor.execute(\"INSERT INTO quizzes (user_id, pdf_id, data) VALUES (?, ?, ?)\", (user_id, pdf_id, quiz_data))\r\n\r\n        conn.commit()\r\n        conn.close()\r\n\r\n    except sqlite3.Error as e:\r\n        pass  # Error is ignored silently\r\n\r\nif __name__ == \"__main__\":\r\n    if len(sys.argv) > 1:\r\n        pdf_id = int(sys.argv[1])\r\n        pdf_path = GetPdf(pdf_id)\r\n\r\n        if pdf_path:  # Only proceed if pdf_path was returned (not None)\r\n            generate(pdf_path[\"path\"], pdf_path[\"user_id\"], pdf_path[\"pdf_id\"])\r\n    \r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 59034007d99886c0a4d96866a87d0f6452e4014f)
+++ b/main.py	(date 1749819444711)
@@ -4,15 +4,16 @@
 import google.generativeai as genai
 import re
 import json
+import tempfile
 
 genai.configure(api_key="AIzaSyCQQKLp1V2GEgnHEab1fKKL6K6O5lcBXZY")
 script_dir = os.path.dirname(os.path.abspath(__file__))
 
-Db_path = os.path.join(script_dir, "..", "DB", "SmartQuizGen.db")
+db_path = os.path.join(script_dir, "..", "DB", "SmartQuizGen.db")
 
 def GetPdf(id):
     try:
-        conn = sqlite3.connect(Db_path)
+        conn = sqlite3.connect(db_path)
         cursor = conn.cursor()
         cursor.execute("SELECT filename, data, user_id FROM pdfs WHERE id = ?", (id,))
         row = cursor.fetchone()
@@ -22,7 +23,8 @@
             return  # No return if the PDF isn't found
 
         filename, pdf_data, user_id = row
-        temp_path = f"/tmp/{filename}"
+        temp_dir = tempfile.gettempdir()
+        temp_path = os.path.join(temp_dir, filename)
 
         with open(temp_path, "wb") as file:
             file.write(pdf_data)
@@ -35,7 +37,7 @@
 def generate(file_path, user_id, pdf_id):
     try:
         uploaded_file = genai.upload_file(path=file_path)
-        model = genai.GenerativeModel("gemini-1.5-pro")
+        model = genai.GenerativeModel("gemini-1.5-flash")
 
         prompt = """
         I will upload a PDF. Your task is to generate 5 multiple-choice quiz questions from it.
@@ -63,14 +65,18 @@
         else:
             quiz_json = '{"quiz": [], "error": "Error in generating quiz."}'
 
+        print(quiz_json)
         save_quiz_to_db(user_id, pdf_id, quiz_json)
+        return quiz_json
 
     except Exception as e:
-        pass  # Error is ignored silently
+        error_result = f'{{"quiz": [], "error": "Error in generating quiz: {str(e)}"}}'
+        print(error_result)
+        return error_result
 
 def save_quiz_to_db(user_id, pdf_id, quiz_data):
     try:
-        conn = sqlite3.connect(Db_path)
+        conn = sqlite3.connect(db_path)
         cursor = conn.cursor()
 
         cursor.execute("INSERT INTO quizzes (user_id, pdf_id, data) VALUES (?, ?, ?)", (user_id, pdf_id, quiz_data))
@@ -79,13 +85,14 @@
         conn.close()
 
     except sqlite3.Error as e:
-        pass  # Error is ignored silently
+        pass
 
-if __name__ == "__main__":
-    if len(sys.argv) > 1:
-        pdf_id = int(sys.argv[1])
-        pdf_path = GetPdf(pdf_id)
+# if __name__ == "__main__":
+#     if len(sys.argv) > 1: int(sys.argv[1])
+pdf_id = 1
+pdf_path = GetPdf(pdf_id)
 
-        if pdf_path:  # Only proceed if pdf_path was returned (not None)
-            generate(pdf_path["path"], pdf_path["user_id"], pdf_path["pdf_id"])
-    
+if pdf_path:  # Only proceed if pdf_path was returned (not None)
+    result = generate(pdf_path["path"], pdf_path["user_id"], pdf_path["pdf_id"])
+else:
+    print("PDF not found")
Index: .idea/Script.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.13 virtualenv at C:\\Users\\PC\\Desktop\\Projects\\c++\\SmartQuizGen\\Script\\.venv\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Script.iml b/.idea/Script.iml
--- a/.idea/Script.iml	(revision 59034007d99886c0a4d96866a87d0f6452e4014f)
+++ b/.idea/Script.iml	(date 1749815599940)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.13 virtualenv at C:\Users\PC\Desktop\Projects\c++\SmartQuizGen\Script\.venv" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.13 (Script) (2)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"188b2b9c-c0d9-45ce-8f83-d198f91d76b1\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../SmartQuizGen/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../SmartQuizGen/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../SmartQuizGen/showpdfs.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../SmartQuizGen/showpdfs.cpp\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ugPYNC4BDd2mgoYC8EKLBNX830\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Desktop/oumayma/AppCovoiturage/Script/sc&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Script\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-PY-243.25659.43\" />\r\n        <option value=\"bundled-python-sdk-181015f7ab06-4df51de95216-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.25659.43\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"188b2b9c-c0d9-45ce-8f83-d198f91d76b1\" name=\"Changes\" comment=\"\" />\r\n      <created>1742667290819</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1742667290819</updated>\r\n      <workItem from=\"1742667291829\" duration=\"1867000\" />\r\n      <workItem from=\"1743088741067\" duration=\"5044000\" />\r\n      <workItem from=\"1743096657815\" duration=\"2164000\" />\r\n      <workItem from=\"1743112355446\" duration=\"1355000\" />\r\n      <workItem from=\"1743114511474\" duration=\"13000\" />\r\n      <workItem from=\"1743594019580\" duration=\"2073000\" />\r\n      <workItem from=\"1743809465129\" duration=\"199000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Script$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1743112570261\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 59034007d99886c0a4d96866a87d0f6452e4014f)
+++ b/.idea/workspace.xml	(date 1749819463112)
@@ -5,9 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="188b2b9c-c0d9-45ce-8f83-d198f91d76b1" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/../DB/SmartQuizGen.db" beforeDir="false" afterPath="$PROJECT_DIR$/../DB/SmartQuizGen.db" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/Script.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Script.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../SmartQuizGen/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../SmartQuizGen/.idea/vcs.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../SmartQuizGen/showpdfs.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/../SmartQuizGen/showpdfs.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -58,8 +60,9 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
+      <option name="SDK_NAME" value="Python 3.13 (Script) (2)" />
       <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-      <option name="IS_MODULE_SDK" value="true" />
+      <option name="IS_MODULE_SDK" value="false" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
       <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
@@ -106,8 +109,19 @@
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Script$main.coverage" NAME="main Coverage Results" MODIFIED="1743112570261" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/Script$main.coverage" NAME="main Coverage Results" MODIFIED="1749819444720" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.13 (Script)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.13 virtualenv at C:\\Users\\PC\\Desktop\\Projects\\c++\\SmartQuizGen\\Script\\.venv\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 59034007d99886c0a4d96866a87d0f6452e4014f)
+++ b/.idea/misc.xml	(date 1749815599942)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.13 (Script)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13 virtualenv at C:\Users\PC\Desktop\Projects\c++\SmartQuizGen\Script\.venv" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13 (Script) (2)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
